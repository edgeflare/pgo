issuer: http://192.168.0.121:5556/dex

storage:
  type: postgres
  config:
    host: 192.168.0.121
    port: 5432
    database: dex
    user: dex
    password: dexpw
    ssl:
      mode: disable
web:
  http: 0.0.0.0:5556
  allowedOrigins: ['*']

staticClients:
- id: public-webui
  redirectURIs:
  - http://localhost:4200/signin/callback
  - http://localhost:4200/signout/callback
  name: public-webui
  public: true
- id: oauth2-proxy
  redirectURIs:
  - http://127.0.0.1:5555/callback
  - http://localhost:5555/callback
  - http://127.0.0.1:4180/oauth2/callback
  name: oauth2-proxy
  secret: ZXhhbXBsZS1hcHAtc2VjcmV0
  trustedPeers:
  - public-webui

connectors:
- type: mockCallback
  id: mock
  name: Example
#- type: github
#  id: github
#  name: GitHub
#  config:
#    clientID: example-client-id
#    clientSecret: example-client-secret
#    redirectURI: http://192.168.0.121:5556/dex/callback
# - type: google
#   id: google
#   name: Google
#   config:
#     issuer: https://accounts.google.com
#     # Connector config values starting with a "$" will read from the environment.
#     clientID: $GOOGLE_CLIENT_ID
#     clientSecret: $GOOGLE_CLIENT_SECRET
#     redirectURI: http://127.0.0.1:5556/dex/callback
#     hostedDomains:
#     - $GOOGLE_HOSTED_DOMAIN

# Let dex keep a list of passwords which can be used to login to dex.
enablePasswordDB: true

# A static list of passwords to login the end user. By identifying here, dex
# won't look in its underlying storage for passwords.
#
# If this option isn't chosen users may be added through the gRPC API.
staticPasswords:
- email: "admin@example.com"
  # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
  hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
  username: "admin"
  userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
